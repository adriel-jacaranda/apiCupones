name: 'Autenticación ADM'
description: ''
endpoints:
  -
    custom: []
    httpMethods:
      - POST
    uri: api/register
    metadata:
      custom: []
      groupName: 'Autenticación ADM'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Registrar un nuevo usuario

        Crea un nuevo usuario en el sistema y devuelve un token de autenticación.
      description: ''
      authenticated: false
      deprecated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        custom: []
        name: name
        description: 'Nombre del usuario.'
        required: true
        example: Juan
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
      nombre_completo:
        custom: []
        name: nombre_completo
        description: 'Nombre completo del usuario.'
        required: false
        example: 'Juan Pérez'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
      celular:
        custom: []
        name: celular
        description: 'Número de celular del usuario.'
        required: false
        example: '77712345'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
      direccion:
        custom: []
        name: direccion
        description: 'Dirección del usuario.'
        required: false
        example: 'Av. Pando 123'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
      email:
        custom: []
        name: email
        description: 'Correo electrónico.'
        required: true
        example: juan@correo.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
      password:
        custom: []
        name: password
        description: 'Contraseña del usuario.'
        required: true
        example: '123456'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
      password_confirmation:
        custom: []
        name: password_confirmation
        description: 'Confirmación de la contraseña.'
        required: true
        example: '123456'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
      rol:
        custom: []
        name: rol
        description: 'Rol del usuario (admin, cliente, gestionador, almacen).'
        required: false
        example: cliente
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
      id_tipo_cliente:
        custom: []
        name: id_tipo_cliente
        description: 'ID del tipo de cliente.'
        required: false
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
      id_almacen:
        custom: []
        name: id_almacen
        description: 'ID del almacén asociado.'
        required: false
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
    cleanBodyParameters:
      name: Juan
      nombre_completo: 'Juan Pérez'
      celular: '77712345'
      direccion: 'Av. Pando 123'
      email: juan@correo.com
      password: '123456'
      password_confirmation: '123456'
      rol: cliente
      id_tipo_cliente: 2
      id_almacen: 5
    fileParameters: []
    responses:
      -
        custom: []
        status: 201
        content: |-
          {
            "access_token": "1|xxxxxxx",
            "token_type": "Bearer",
            "user": {
              "id": 1,
              "name": "Juan",
              "email": "juan@correo.com"
            }
          }
        headers: []
        description: ''
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
  -
    custom: []
    httpMethods:
      - POST
    uri: api/login
    metadata:
      custom: []
      groupName: 'Autenticación ADM'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Iniciar sesión

        Verifica las credenciales del usuario y devuelve un token de acceso Bearer.
      description: ''
      authenticated: false
      deprecated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        custom: []
        name: email
        description: 'Correo electrónico del usuario.'
        required: true
        example: juan@correo.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
      password:
        custom: []
        name: password
        description: 'Contraseña del usuario.'
        required: true
        example: '123456'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
    cleanBodyParameters:
      email: juan@correo.com
      password: '123456'
    fileParameters: []
    responses:
      -
        custom: []
        status: 200
        content: |-
          {
            "access_token": "1|xxxxxxx",
            "token_type": "Bearer",
            "user": {
              "id": 1,
              "name": "Juan",
              "email": "juan@correo.com"
            }
          }
        headers: []
        description: ''
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
  -
    custom: []
    httpMethods:
      - GET
    uri: api/me
    metadata:
      custom: []
      groupName: 'Autenticación ADM'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Obtener información del usuario autenticado

        Devuelve los datos del usuario autenticado junto con sus relaciones `tipoCliente` y `almacen`.
      description: ''
      authenticated: true
      deprecated: false
    headers:
      Authorization: 'Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        custom: []
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer {YOUR_TOKEN}'
    controller: null
    method: null
    route: null
  -
    custom: []
    httpMethods:
      - GET
    uri: api/usuarios
    metadata:
      custom: []
      groupName: 'Autenticación ADM'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Listar todos los usuarios

        Devuelve una lista de todos los usuarios registrados con sus relaciones.
      description: ''
      authenticated: true
      deprecated: false
    headers:
      Authorization: 'Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        custom: []
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer {YOUR_TOKEN}'
    controller: null
    method: null
    route: null
  -
    custom: []
    httpMethods:
      - DELETE
    uri: 'api/usuarios/{id}'
    metadata:
      custom: []
      groupName: 'Autenticación ADM'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Eliminar un usuario

        Elimina un usuario existente por su ID.
      description: ''
      authenticated: true
      deprecated: false
    headers:
      Authorization: 'Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        custom: []
        name: id
        description: 'ID del usuario a eliminar.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer {YOUR_TOKEN}'
    controller: null
    method: null
    route: null
  -
    custom: []
    httpMethods:
      - PUT
    uri: 'api/usuarios/{id}'
    metadata:
      custom: []
      groupName: 'Autenticación ADM'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Actualizar un usuario existente

        Permite modificar los datos de un usuario (nombre, correo, rol, contraseña, etc.).
      description: ''
      authenticated: true
      deprecated: false
    headers:
      Authorization: 'Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        custom: []
        name: id
        description: 'ID del usuario a actualizar.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer {YOUR_TOKEN}'
    controller: null
    method: null
    route: null
  -
    custom: []
    httpMethods:
      - POST
    uri: api/logout
    metadata:
      custom: []
      groupName: 'Autenticación ADM'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Cerrar sesión

        Elimina el token de acceso actual del usuario autenticado.
      description: ''
      authenticated: true
      deprecated: false
    headers:
      Authorization: 'Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        custom: []
        status: 200
        content: |-
          {
            "message": "Sesión cerrada"
          }
        headers: []
        description: ''
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer {YOUR_TOKEN}'
    controller: null
    method: null
    route: null
  -
    custom: []
    httpMethods:
      - POST
    uri: api/refresh-token
    metadata:
      custom: []
      groupName: 'Autenticación ADM'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Refrescar token de autenticación

        Revoca el token actual y genera uno nuevo.
      description: ''
      authenticated: true
      deprecated: false
    headers:
      Authorization: 'Bearer {YOUR_TOKEN}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Bearer {YOUR_TOKEN}'
    controller: null
    method: null
    route: null
